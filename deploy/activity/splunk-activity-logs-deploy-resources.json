{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "altEventHubNamespaceName": {
      "type": "string",
      "defaultValue": ""
    },
    "altFunctionName": {
      "type": "string",
      "defaultValue": ""
    },
    "altBackupStorageName": {
      "type": "string",
      "defaultValue": ""
    },
    "altLogsStorageName": {
      "type": "string",
      "defaultValue": ""
    },
    "altJobsStorageName": {
      "type": "string",
      "defaultValue": ""
    },
    "functionPackageURL": {
      "type": "string"
    },
    "hecToken": {
      "type": "securestring"
    },
    "hecUrl": {
      "type": "string"
    },
    "region": {
      "type": "string"
    },
    "scdmInputId": {
      "type": "string"
    },
    "servicePrincipalObjectId": {
      "type": "string"
    },
    "existingResourceGroupName": {
      "type": "string",
      "defaultValue": ""
    },
    "resourceTags": {
      "type": "object",
      "defaultValue": {}
    },
    "enableEventhubMetadata":{
      "type": "string",
      "defaultValue": "false"
    }
  },
  "variables": {
    "resourceGroupName": "[if(equals(parameters('existingResourceGroupName'), ''), concat('SplunkDMDataIngest-', parameters('scdmInputId')), parameters('existingResourceGroupName'))]",
    "resourceDeployment": "[concat('SplunkDMDataIngest-', parameters('scdmInputId'))]",
    "scdmInputTag": { "SplunkDMInputId": "[parameters('scdmInputId')]" },
    "allResourceTags": "[union(variables('scdmInputTag'), parameters('resourceTags'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "location": "[parameters('region')]",
      "name": "[variables('resourceGroupName')]",
      "tags": "[union(variables('allResourceTags'), createObject('SplunkDMDeletionOrder', 10))]",
      "condition":"[equals(parameters('existingResourceGroupName'), '')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/deployments",
      "tags": "[union(variables('allResourceTags'), createObject('SplunkDMDeletionOrder', 9))]",
      "apiVersion": "2021-04-01",
      "name": "[variables('resourceDeployment')]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "Inner"
        },
        "parameters": {
          "allResourceTags": {
            "value": "[variables('allResourceTags')]"
          },
          "altEventHubNamespaceName": {
            "value": "[parameters('altEventHubNamespaceName')]"
          },
          "altFunctionName": {
            "value": "[parameters('altFunctionName')]"
          },
          "altBackupStorageName": {
            "value": "[parameters('altBackupStorageName')]"
          },
          "altLogsStorageName": {
            "value": "[parameters('altLogsStorageName')]"
          },
          "altJobsStorageName": {
            "value": "[parameters('altJobsStorageName')]"
          },
          "functionPackageURL": {
            "value": "[parameters('functionPackageURL')]"
          },
          "hecToken": {
            "value": "[parameters('hecToken')]"
          },
          "hecUrl": {
            "value": "[parameters('hecUrl')]"
          },
          "region": {
            "value": "[parameters('region')]"
          },
          "scdmInputId": {
            "value": "[parameters('scdmInputId')]"
          },
          "servicePrincipalObjectId": {
            "value": "[parameters('servicePrincipalObjectId')]"
          },
          "enableEventhubMetadata": {
            "value": "[parameters('enableEventhubMetadata')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "allResourceTags": {
              "type": "object"
            },
            "altEventHubNamespaceName": {
              "type": "string"
            },
            "altFunctionName": {
              "type": "string"
            },
            "altBackupStorageName": {
              "type": "string"
            },
            "altLogsStorageName": {
              "type": "string"
            },
            "functionPackageURL": {
              "type": "string"
            },
            "altJobsStorageName": {
              "type": "string"
            },
            "hecToken": {
              "type": "securestring"
            },
            "hecUrl": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "scdmInputId": {
              "type": "string"
            },
            "servicePrincipalObjectId": {
              "type": "string"
            },
            "enableEventhubMetadata": {
              "type": "string"
            }
          },
          "variables": {
            "consumerGroupName": "splk-activity-logs-consumer-group",
            "eventHubAuthRuleListen": "splk-activity-logs-eventhub-auth-listen",
            "eventHubAuthRuleSend": "splk-activity-logs-eventhub-auth-send",
            "eventHubMaxThroughputUnits": 40,
            "eventHubName": "splk-activity-logs-eventhub",
            "eventHubNamespaceName": "[if(equals(parameters('altEventHubNamespaceName'), ''), concat('splkActLogsEH', parameters('scdmInputId')), parameters('altEventHubNamespaceName'))]",
            "functionName": "[if(equals(parameters('altFunctionName'), ''), concat('splkActLogsFn', parameters('scdmInputId')), parameters('altFunctionName'))]",
            "hostingPlanName": "[concat('splk-act-logs-hosting-plan', uniqueString(parameters('scdmInputId')))]",
            "backupStorageAccountName": "[if(equals(parameters('altBackupStorageName'), ''), concat('splkactstr', uniqueString(parameters('scdmInputId'))), parameters('altBackupStorageName'))]",
            "logsStorageAccountName": "[if(equals(parameters('altLogsStorageName'), ''), concat('splklogstr', uniqueString(parameters('scdmInputId'))), parameters('altLogsStorageName'))]",
            "jobsStorageAccountName": "[if(equals(parameters('altJobsStorageName'), ''), concat('splkjobstr', uniqueString(parameters('scdmInputId'))), parameters('altJobsStorageName'))]"
          },
          "resources": [
            {
              "name": "[parameters('scdmInputId')]",
              "type": "Microsoft.Authorization/roleDefinitions",
              "tags": "[union(parameters('allResourceTags'), createObject('SplunkDMDeletionOrder', 7))]",
              "apiVersion": "2022-04-01",
              "properties": {
                "description": "This role will allow Splunk Data Manager to read the metadata of your Azure Subscription and Azure resources created during this ARM deployment (such as the Event Hub Namespace and Storage Account) so that Splunk can make recommendations during onboarding.",
                "roleName": "[concat('splunk-dm-read-only-', parameters('scdmInputId'))]",
                "type": "CustomRole",
                "assignableScopes": "[array(resourceGroup().id)]",
                "permissions": [
                  {
                    "actions": [
                      "Microsoft.Authorization/roleDefinitions/read",
                      "Microsoft.Authorization/roleAssignments/read",
                      "Microsoft.EventHub/namespaces/read",
                      "Microsoft.EventHub/namespaces/authorizationRules/read",
                      "Microsoft.EventHub/namespaces/eventhubs/read",
                      "Microsoft.EventHub/namespaces/eventHubs/consumergroups/read",
                      "Microsoft.Resources/deployments/read",
                      "Microsoft.Resources/subscriptions/resourcegroups/read",
                      "Microsoft.Storage/storageAccounts/blobServices/containers/read",
                      "Microsoft.Storage/storageAccounts/read",
                      "Microsoft.Storage/storageAccounts/managementPolicies/read",
                      "Microsoft.Web/sites/read",
                      "Microsoft.Web/serverfarms/read",
                      "Microsoft.Web/sites/sourcecontrols/read"
                    ],
                    "dataActions": [
                      "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"
                    ]
                  }
                ]
              }
            },
            {
              "name": "[parameters('scdmInputId')]",
              "type": "Microsoft.Authorization/roleAssignments",
              "tags": "[union(parameters('allResourceTags'), createObject('SplunkDMDeletionOrder', 8))]",
              "apiVersion": "2022-04-01",
              "dependsOn": [
                "[resourceId('Microsoft.Authorization/roleDefinitions/', parameters('scdmInputId'))]"
              ],
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions/', parameters('scdmInputId'))]",
                "principalId": "[parameters('servicePrincipalObjectId')]",
                "principalType": "ServicePrincipal",
                "scope": "[resourceGroup().id]"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "tags": "[union(parameters('allResourceTags'), createObject('SplunkDMDeletionOrder', 6))]",
              "apiVersion": "2021-04-01",
              "name": "[variables('logsStorageAccountName')]",
              "location": "[parameters('region')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "supportsHttpsTrafficOnly": true,
                "accessTier": "Cool",
                "allowBlobPublicAccess": false,
                "minimumTlsVersion": "TLS1_2"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/managementPolicies",
              "apiVersion": "2021-04-01",
              "name": "[concat(variables('logsStorageAccountName'), '/default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('logsStorageAccountName'))]"
              ],
              "properties": {
                "policy": {
                  "rules": [
                    {
                      "name": "DeleteLogsAfterSixtyDays",
                      "enabled": true,
                      "type": "Lifecycle",
                      "definition": {
                        "actions": {
                          "baseBlob": {
                            "delete": {
                              "daysAfterModificationGreaterThan": 60
                            }
                          }
                        },
                        "filters": {
                          "blobTypes": [ "appendBlob" ],
                          "prefixMatch": [ "insights-logs-" ]
                        }
                      }
                    },
                    {
                      "name": "DeleteMetricsAfterSixtyDays",
                      "enabled": true,
                      "type": "Lifecycle",
                      "definition": {
                        "actions": {
                          "baseBlob": {
                            "delete": {
                              "daysAfterModificationGreaterThan": 60
                            }
                          }
                        },
                        "filters": {
                          "blobTypes": [ "appendBlob" ],
                          "prefixMatch": [ "insights-metrics-" ]
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "tags": "[union(parameters('allResourceTags'), createObject('SplunkDMDeletionOrder', 4))]",
              "apiVersion": "2021-04-01",
              "name": "[variables('backupStorageAccountName')]",
              "location": "[parameters('region')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "supportsHttpsTrafficOnly": true,
                "allowBlobPublicAccess": false,
                "minimumTlsVersion": "TLS1_2"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/managementPolicies",
              "apiVersion": "2021-04-01",
              "name": "[concat(variables('backupStorageAccountName'), '/default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('backupStorageAccountName'))]"
              ],
              "properties": {
                "policy": {
                  "rules": [
                    {
                      "name": "DeleteLogsAfterSixtyDays",
                      "enabled": true,
                      "type": "Lifecycle",
                      "definition": {
                        "actions": {
                          "baseBlob": {
                            "delete": {
                              "daysAfterModificationGreaterThan": 60
                            }
                          }
                        },
                        "filters": {
                          "blobTypes": [ "appendBlob" ],
                          "prefixMatch": [ "insights-logs-" ]
                        }
                      }
                    },
                    {
                      "name": "DeleteMetricsAfterSixtyDays",
                      "enabled": true,
                      "type": "Lifecycle",
                      "definition": {
                        "actions": {
                          "baseBlob": {
                            "delete": {
                              "daysAfterModificationGreaterThan": 60
                            }
                          }
                        },
                        "filters": {
                          "blobTypes": [ "appendBlob" ],
                          "prefixMatch": [ "insights-metrics-" ]
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/providers/diagnosticSettings",
              "tags": "[parameters('allResourceTags')]",
              "apiVersion": "2017-05-01-preview",
              "name": "[concat(variables('backupStorageAccountName'), '/Microsoft.Insights/', 'splunk-storage-account-diagnostic-settings')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('backupStorageAccountName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('logsStorageAccountName'))]"
              ],
              "properties": {
                "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('logsStorageAccountName'))]",
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "tags": "[union(parameters('allResourceTags'), createObject('SplunkDMDeletionOrder', 3))]",
              "apiVersion": "2021-04-01",
              "name": "[variables('jobsStorageAccountName')]",
              "location": "[parameters('region')]",
              "sku": {
                  "name": "Standard_LRS",
                  "tier": "Standard"
              },
              "kind": "StorageV2",
              "properties": {
                "supportsHttpsTrafficOnly": true,
                "allowBlobPublicAccess": false,
                "minimumTlsVersion": "TLS1_2"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/managementPolicies",
              "apiVersion": "2021-04-01",
              "name": "[concat(variables('jobsStorageAccountName'), '/default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('jobsStorageAccountName'))]"
              ],
              "properties": {
                "policy": {
                  "rules": [
                    {
                      "name": "DeleteLogsAfterSixtyDays",
                      "enabled": true,
                      "type": "Lifecycle",
                      "definition": {
                        "actions": {
                          "baseBlob": {
                            "delete": {
                              "daysAfterModificationGreaterThan": 60
                            }
                          }
                        },
                        "filters": {
                          "blobTypes": [ "appendBlob" ],
                          "prefixMatch": [ "insights-logs-" ]
                        }
                      }
                    },
                    {
                      "name": "DeleteMetricsAfterSixtyDays",
                      "enabled": true,
                      "type": "Lifecycle",
                      "definition": {
                        "actions": {
                          "baseBlob": {
                            "delete": {
                              "daysAfterModificationGreaterThan": 60
                            }
                          }
                        },
                        "filters": {
                          "blobTypes": [ "appendBlob" ],
                          "prefixMatch": [ "insights-metrics-" ]
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/providers/diagnosticSettings",
              "tags": "[parameters('allResourceTags')]",
              "apiVersion": "2017-05-01-preview",
              "name": "[concat(variables('jobsStorageAccountName'), '/Microsoft.Insights/', 'splunk-storage-account-diagnostic-settings')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('jobsStorageAccountName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('logsStorageAccountName'))]"
              ],
              "properties": {
                "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('logsStorageAccountName'))]",
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              }
            },
            {
              "type": "Microsoft.EventHub/namespaces",
              "tags": "[union(parameters('allResourceTags'), createObject('SplunkDMDeletionOrder', 5))]",
              "apiVersion": "2022-01-01-preview",
              "name": "[variables('eventHubNamespaceName')]",
              "location": "[parameters('region')]",
              "properties": {
                "isAutoInflateEnabled": true,
                "maximumThroughputUnits": "[variables('eventHubMaxThroughputUnits')]",
                "minimumTlsVersion": "1.2"
              },
              "sku": {
                "name": "Standard",
                "tier": "Standard"
              },
              "resources": [
                {
                  "type": "eventhubs",
                  "apiVersion": "2021-11-01",
                  "name": "[variables('eventHubName')]",
                  "properties": {
                    "partitionCount": 32
                  },
                  "dependsOn": [
                    "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]"
                  ],
                  "resources": [
                    {
                      "apiVersion": "2021-11-01",
                      "type": "consumergroups",
                      "name": "[variables('consumerGroupName')]",
                      "dependsOn": [
                        "[variables('eventHubName')]"
                      ],
                      "properties": {}
                    }
                  ]
                },
                {
                  "type": "AuthorizationRules",
                  "apiVersion": "2021-11-01",
                  "name": "[variables('eventHubAuthRuleListen')]",
                  "dependsOn": [
                    "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]",
                    "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubNamespaceName'), variables('eventHubName'))]",
                    "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', variables('eventHubNamespaceName'), variables('eventHubAuthRuleSend'))]"
                  ],
                  "properties": {
                    "rights": [
                      "Listen"
                    ]
                  }
                },
                {
                  "type": "AuthorizationRules",
                  "apiVersion": "2021-11-01",
                  "name": "[variables('eventHubAuthRuleSend')]",
                  "dependsOn": [
                    "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]",
                    "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubNamespaceName'), variables('eventHubName'))]"
                  ],
                  "properties": {
                    "rights": [
                      "Send"
                    ]
                  }
                }
              ]
            },
            {
              "type": "Microsoft.EventHub/namespaces/providers/diagnosticSettings",
              "tags": "[parameters('allResourceTags')]",
              "apiVersion": "2017-05-01-preview",
              "name": "[concat(variables('eventHubNamespaceName'), '/Microsoft.Insights/', 'splunk-eventhub-namespace-diagnostic-settings')]",
              "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('logsStorageAccountName'))]"
              ],
              "properties": {
                "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('logsStorageAccountName'))]",
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "tags": "[union(parameters('allResourceTags'), createObject('SplunkDMDeletionOrder', 2))]",
              "apiVersion": "2020-12-01",
              "name": "[variables('hostingPlanName')]",
              "location": "[parameters('region')]",
              "kind": "functionapp",
              "properties": {
                "computeMode": "Dynamic",
                "reserved": true
              },
              "sku": {
                "name": "Y1",
                "tier": "Dynamic"
              }
            },
            {
              "type": "Microsoft.Web/serverfarms/providers/diagnosticSettings",
              "tags": "[parameters('allResourceTags')]",
              "apiVersion": "2017-05-01-preview",
              "name": "[concat(variables('hostingPlanName'), '/Microsoft.Insights/', 'splunk-hosting-plan-diagnostic-settings')]",
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('logsStorageAccountName'))]"
              ],
              "properties": {
                "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('logsStorageAccountName'))]",
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              }
            },
            {
              "name": "[variables('functionName')]",
              "type": "Microsoft.Web/sites",
              "tags": "[union(parameters('allResourceTags'), createObject('SplunkDMDeletionOrder', 1))]",
              "apiVersion": "2020-12-01",
              "location": "[parameters('region')]",
              "kind": "functionapp,linux",
              "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubNamespaceName'), variables('eventHubName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('backupStorageAccountName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('jobsStorageAccountName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
              ],
              "properties": {
                "clientAffinityEnabled": false,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                  "cors": {
                    "allowedOrigins": [
                      "*"
                    ]
                  },
                  "linuxFxVersion": "node|18",
                  "appSettings": [
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~4"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "node"
                    },
                    {
                      "name": "WEBSITE_RUN_FROM_PACKAGE",
                      "value": "[parameters('functionPackageURL')]"
                    },
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[concat(
                          'DefaultEndpointsProtocol=https;AccountName=',
                          variables('jobsStorageAccountName'),
                          ';AccountKey=',
                          listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('jobsStorageAccountName')), '2021-04-01').keys[0].value)]"
                    },
                    {
                      "name": "ConsumerGroupName",
                      "value": "[variables('consumerGroupName')]"
                    },
                    {
                      "name": "DataManagerInputId",
                      "value": "[parameters('scdmInputId')]"
                    },
                    {
                      "name": "EventHubName",
                      "value": "[variables('eventHubName')]"
                    },
                    {
                      "name": "EventHubConnection",
                      "value": "[listKeys(resourceId('Microsoft.EventHub/namespaces/AuthorizationRules', variables('eventHubNamespaceName'), variables('eventHubAuthRuleListen')), '2021-11-01').primaryConnectionString]"
                    },
                    {
                      "name": "FailedEventsStorageConnection",
                      "value": "[concat(
                          'DefaultEndpointsProtocol=https;AccountName=',
                          variables('backupStorageAccountName'),
                          ';AccountKey=',
                          listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('backupStorageAccountName')), '2021-04-01').keys[0].value)]"
                    },
                    {
                      "name": "HecUrl",
                      "value": "[parameters('hecUrl')]"
                    },
                    {
                      "name": "HecToken",
                      "value": "[parameters('hecToken')]"
                    },
                    {
                      "name": "LogLevel",
                      "value": "INFO"
                    },
                    {
                      "name": "SourceType",
                      "value": "azure:monitor:activity"
                    },
                    {
                      "name": "Region",
                      "value": "[parameters('region')]"
                    },
                    {
                      "name": "EnableEventhubMetadata",
                      "value": "[parameters('enableEventhubMetadata')]"
                    }
                  ]
                }
              },
              "resources": []
            },
            {
              "type": "Microsoft.Web/sites/providers/diagnosticSettings",
              "tags": "[parameters('allResourceTags')]",
              "apiVersion": "2017-05-01-preview",
              "name": "[concat(variables('functionName'), '/Microsoft.Insights/', 'splunk-azure-function-diagnostic-settings')]",
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('functionName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('logsStorageAccountName'))]"
              ],
              "properties": {
                "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('logsStorageAccountName'))]",
                "logs": [
                  {
                    "category": "FunctionAppLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              }
            }
          ]
        }
      }
    }
  ]
}
