{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "altEventHubNamespaceName":{
      "type": "string",
      "defaultValue": ""
    },
    "altFunctionName": {
      "type": "string",
      "defaultValue": ""
    },
    "altStorageName": {
      "type": "string",
      "defaultValue": ""
    },
    "eventHubMaxThroughputUnits": {
      "type": "int",
      "defaultValue": 10
    },
    "hecToken": {
      "type": "securestring"
    },
    "hecUrl": {
      "type": "string"
    },
    "region": {
      "type": "string"
    },
    "repoBranch": {
      "type": "string"
    },
    "repoUrl": {
      "type": "string"
    },
    "scdmInputId": {
      "type": "string"
    }
  },
  "variables": {
    "resourceGroupName": "[concat('splkAadLogsRg', parameters('scdmInputId'))]",
    "resourceDeployment": "[concat('splkAadLogsRd', parameters('scdmInputId'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "location": "[parameters('region')]",
      "name": "[variables('resourceGroupName')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[variables('resourceDeployment')]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "Inner"
        },
        "parameters": {
          "altEventHubNamespaceName": {
            "value": "[parameters('altEventHubNamespaceName')]"
          },
          "altFunctionName": {
            "value": "[parameters('altFunctionName')]"
          },
          "altStorageName": {
            "value": "[parameters('altStorageName')]"
          },
          "eventHubMaxThroughputUnits": {
            "value": "[parameters('eventHubMaxThroughputUnits')]"
          },
          "hecToken": {
            "value": "[parameters('hecToken')]"
          },
          "hecUrl": {
            "value": "[parameters('hecUrl')]"
          },
          "repoBranch": {
            "value": "[parameters('repoBranch')]"
          },
          "repoUrl": {
            "value": "[parameters('repoUrl')]"
          },
          "scdmInputId": {
            "value": "[parameters('scdmInputId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "altEventHubNamespaceName":{
              "type": "string"
            },
            "altFunctionName": {
              "type": "string"
            },
            "altStorageName": {
              "type": "string"
            },
            "eventHubMaxThroughputUnits": {
              "type": "int"
            },
            "hecToken": {
              "type": "securestring"
            },
            "hecUrl": {
              "type": "string"
            },
            "repoBranch": {
              "type": "string"
            },
            "repoUrl": {
              "type": "string"
            },
            "scdmInputId": {
              "type": "string"
            }
          },
          "variables": {
            "consumerGroupName": "splk-aad-logs-consumer-group",
            "eventHubAuthRule": "splk-aad-logs-eventhub-auth",
            "eventHubName": "splk-aad-logs-eventhub",
            "eventHubNamespaceName": "[if(equals(parameters('altEventHubNamespaceName'), ''), concat('splkAadLogsEH', parameters('scdmInputId')), parameters('altEventHubNamespaceName'))]",
            "functionName": "[if(equals(parameters('altFunctionName'), ''), concat('splkAadLogsFn', parameters('scdmInputId')), parameters('altFunctionName'))]",
            "hostingPlanName": "splk-aad-logs-hosting-plan",
            "region": "[resourceGroup().location]",
            "storageAccountName": "[if(equals(parameters('altStorageName'), ''), concat('splkaadstr', uniqueString(parameters('scdmInputId'))), parameters('altStorageName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.EventHub/namespaces",
              "apiVersion": "2021-01-01-preview",
              "name": "[variables('eventHubNamespaceName')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "isAutoInflateEnabled": true,
                "maximumThroughputUnits": "[parameters('eventHubMaxThroughputUnits')]"
              },
              "sku": {
                "name": "Standard",
                "tier": "Standard"
              },
              "resources": [
                {
                  "type": "eventhubs",
                  "apiVersion": "2021-01-01-preview",
                  "name": "[variables('eventHubName')]",
                  "properties": {
                    "partitionCount": 32
                  },
                  "dependsOn": [
                    "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]"
                  ],
                  "resources": [
                    {
                      "apiVersion": "2021-01-01-preview",
                      "type": "consumergroups",
                      "name": "[variables('consumerGroupName')]",
                      "dependsOn": [
                        "[variables('eventHubName')]"
                      ],
                      "properties": {}
                    }
                  ]
                },
                {
                  "type": "AuthorizationRules",
                  "apiVersion": "2021-01-01-preview",
                  "name": "[variables('eventHubAuthRule')]",
                  "dependsOn": [
                    "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]",
                    "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubNamespaceName'), variables('eventHubName'))]"
                  ],
                  "properties": {
                    "rights": [
                      "Send",
                      "Listen"
                    ]
                  }
                }
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-04-01",
              "name": "[variables('storageAccountName')]",
              "location": "[resourceGroup().location]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2"
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-12-01",
              "name": "[variables('hostingPlanName')]",
              "location": "[resourceGroup().location]",
              "kind": "app,linux",
              "properties": {
                "reserved": true
              },
              "sku": {
                "name": "S1",
                "tier": "Standard"
              }
            },
            {
              "name": "[variables('functionName')]",
              "type": "Microsoft.Web/sites",
              "apiVersion": "2020-12-01",
              "location": "[resourceGroup().location]",
              "kind": "functionapp",
              "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubNamespaceName'), variables('eventHubName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
              ],
              "properties": {
                "clientAffinityEnabled": false,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                  "cors": {
                    "allowedOrigins": [
                      "*"
                    ]
                  },
                  "linuxFxVersion": "NODE|14-lts",
                  "appSettings": [
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~3"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "node"
                    },
                    {
                      "name": "WEBSITE_NODE_DEFAULT_VERSION",
                      "value":"14"
                    },
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[concat(
                        'DefaultEndpointsProtocol=https;AccountName=',
                        variables('storageAccountName'),
                        ';AccountKey=',
                        listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-04-01').keys[0].value)]"
                    },
                    {
                      "name": "ConsumerGroupName",
                      "value": "[variables('consumerGroupName')]"
                    },
                    {
                      "name": "DataManagerInputId",
                      "value": "[parameters('scdmInputId')]"
                    },
                    {
                      "name": "EventHubName",
                      "value": "[variables('eventHubName')]"
                    },
                    {
                      "name": "EventHubConnection",
                      "value": "[listKeys(resourceId('Microsoft.EventHub/namespaces/AuthorizationRules', variables('eventHubNamespaceName'), variables('eventHubAuthRule')), '2021-01-01-preview').primaryConnectionString]"
                    },
                    {
                      "name": "FailedEventsStorageConnection",
                      "value": "[concat(
                        'DefaultEndpointsProtocol=https;AccountName=',
                        variables('storageAccountName'),
                        ';AccountKey=',
                        listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-04-01').keys[0].value)]"
                    },
                    {
                      "name": "HecUrl",
                      "value": "[parameters('hecUrl')]"
                    },
                    {
                      "name": "HecToken",
                      "value": "[parameters('hecToken')]"
                    },
                    {
                      "name": "LogLevel",
                      "value": "INFO"
                    },
                    {
                      "name": "SourceType",
                      "value": "azure:aad"
                    },
                    {
                      "name": "Region",
                      "value": "[variables('region')]"
                    }
                  ]
                }
              },
              "resources": [
                {
                  "apiVersion": "2020-12-01",
                  "type": "sourcecontrols",
                  "name": "web",
                  "dependsOn": [
                    "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                    "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                    "[resourceId('Microsoft.Web/sites', variables('functionName'))]"
                  ],
                  "properties": {
                    "repoUrl": "[parameters('repoUrl')]",
                    "branch": "[parameters('repoBranch')]",
                    "isManualIntegration": true
                  }
                }
              ]
            }
          ]
        }
      }
    }
  ]
}
